plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.25.0'
	id "com.palantir.docker-run" version "0.25.0"
	id "com.palantir.docker-compose" version "0.25.0"
}

group = 'pho.formulaone.batch'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.squareup.retrofit2:retrofit:2.9.0'
	implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
}

test {
	useJUnitPlatform()
}

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/docker/dependency")
}

docker {
	tag 'local', 'functional-formula-one-batch:latest'
	tag 'localVersion', "functional-formula-one-batch:${version}"
	name 'functional-formula-one-batch'
	buildArgs([DEPENDENCY: "dependency", APPCLASS: 'pho.formulaone.batch.FunctionalFormulaOneBatchApplication'])
	dockerfile file("Dockerfile")
}

dockerCompose {
	template 'src/main/docker/docker-compose.functionalformulaonebatch.yml'
	dockerComposeFile "$buildDir/docker/ortolanuniverse/docker-compose.yml"
	templateTokens([
			'ffonebatch.version': "$project.version",
	])
}

dockerRun {
	name = "functional-formula-one-batch-main"
	image = "functional-formula-one-batch"
	ports("8080:8080")
}

dockerPrepare.dependsOn unpack

configure(unpack) {
	group = 'docker'
	description = 'Unpacks the boot jar so we can build multi-layer images'
}
